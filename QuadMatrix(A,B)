using Microsoft.VisualBasic.CompilerServices;
using System;

namespace QuadMatrix
{
    class QuadMatrix
    {
        static void Main(string[] args)
        {
            int n = 0, res = 0;
            Console.Write("(N) ");
            n = tryParse(n);

            for (int i = 1; i <= n; i++)
            {
                Console.Write("{0} ", i);

                res += i;

                for (int j = 1; j < n; j++)
                {
                    res += n;
                    Console.Write("{0} ", res);
                }

                res = 0;
                Console.WriteLine();
                
            }

            Console.WriteLine();

            int[,] matrix = new int[n, n];
            matrix[0, 0] = 1;

            for (int i = 1; i < matrix.GetLength(0); i++)
            {
                if (i % 2 == 1)
                {
                    matrix[0, i] = matrix[0, i - 1] + n * 2 - 1;
                }
                else
                {
                    matrix[0, i] = matrix[0, i - 1] + 1;
                }
            }

            for (int i = 1; i < matrix.GetLength(0); i++)
            {
                for (int j = 0; j < matrix.GetLength(1); j++)
                {
                    if (j % 2 == 1)
                    {
                        matrix[i, j] = matrix[i - 1, j] - 1;
                    }
                    else
                    {
                        matrix[i, j] = matrix[i - 1, j] + 1;
                    }
                }
            }

            for (int i = 0; i < matrix.GetLength(0); i++)
            {
                for (int j = 0; j < matrix.GetLength(1); j++)
                {
                    Console.Write("{0} ", matrix[i, j]);
                }
                Console.WriteLine();
            }
        }
        static int tryParse(int num)
        {
            bool tryParse = false;

            do
            {
                Console.Write("Enter a value: ");
                tryParse = int.TryParse(Console.ReadLine(), out num);
                if (tryParse == true)
                {
                    return num;
                }
                else
                {
                    Console.WriteLine("Try again!");
                }
            } while (tryParse == false);

            return 1;
        }
    }
}
